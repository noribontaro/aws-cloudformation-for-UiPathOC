---
# UiPath Orchestrator Standard Environment With DirectConnect
# ベースは「uipath-permanent-environment-template-es_zoneawareness_simplead_nlb_20181026-01.yaml」
AWSTemplateFormatVersion: '2010-09-09'
Description: CloudFromation Template for UiPath Orchestrator Standard Environment (2019/05 Enhance Ver.)
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
    - Label:
        default: VPC CIDRs
      Parameters:
      - VPCCIDR
      - WorkSpacesSubnet01CIDR
      - WorkSpacesSubnet02CIDR
      - ELBSubnet01CIDR
      - ELBSubnet02CIDR
      - AutoScalingSubnet01CIDR
      - AutoScalingSubnet02CIDR
      - DataStoreSubnet01CIDR
      - DataStoreSubnet02CIDR
      - NATGWSubnetCIDR01
      - NATGWSubnetCIDR02
      - AmiSubnetCIDR
    - Label:
        default: AutoScaling Instances
      Parameters:
      - AutoScalingMin
      - AutoScalingMax
      - DesiredNum
      - Ec2InstanceType
      - AsgImageId
      - HealthCheckPeriod
    - Label:
        default: Name Space Instances
      Parameters:
      - NameSpaceEc2InstanceType
    - Label:
        default: Elasticsearch
      Parameters:
      - ESDomainName
      - ESInstanceType
      - ESInstanceNumber
      - ESDedicatedMasterType
    - Label:
        default: ElastiCache Redis
      Parameters:
      - ECInstanceType
    - Label:
        default: RDS SQL Server
      Parameters:
      - RDSInstanceIdentifier
      - RDSMasterUsername
      #- RDSUserPassword
      - RDSInstanceType
      - RDSStorageSize
    - Label:
        default: SimpleAD for WorkSpaces
      Parameters:
      - SimpleADDirectoryName
      - SimpleADDirectoryShortName
      #- SimpleADPW
    - Label:
        default: MicrosoftAD for FSx Windows
      Parameters:
      - MicrosoftADDirectoryName
      - MicrosoftADDirectoryShortName
      #- MicrosoftADPW
    - Label:
        default: FSx For Windows
      Parameters:
      - FsxStorageSize
      - FsxThroughputCapacity
      - Fsx01MaintenanceTime
      - Fsx01BackupStartTime
      - Fsx02MaintenanceTime
      - Fsx02BackupStartTime
      - FsxBackupRetentionDay
    - Label:
        default: Route53 Private Hosted Zone
      Parameters:
      - UiPathPrivateHostedZone
      - UiPathELBRecord
    - Label:
        default: Cognito
      Parameters:
      - CognitoUserPoolName
      - CognitoIdentityPoolName

    ParameterLabels:
      VPCCIDR:
        default: "VPC CIDR"
      WorkSpacesSubnet01CIDR:
        default: "WorkSpaces Subnet01 CIDR"
      WorkSpacesSubnet02CIDR:
        default: "WorkSpaces Subnet02 CIDR"
      ELBSubnet01CIDR:
        default: "Elastic Load Balarncer Subnet01 CIDR"
      ELBSubnet02CIDR:
        default: "Elastic Load Balarncer Subnet02 CIDR"
      AutoScalingSubnet01CIDR:
        default: "AutoScaling Subnet01 CIDR"
      AutoScalingSubnet02CIDR:
        default: "AutoScaling Subnet02 CIDR"
      DataStoreSubnet01CIDR:
        default: "DataStore Subnet01 CIDR"
      DataStoreSubnet02CIDR:
        default: "DataStore Subnet02 CIDR"
      NATGWSubnetCIDR01:
        default: "NAT Gateway Subnet01 CIDR"
      NATGWSubnetCIDR02:
        default: "NAT Gateway Subnet02 CIDR"
      AmiSubnetCIDR:
        default: "AMI Instance Subnet CIDR"
      ESDomainName:
        default: "Elasticsearch Domain Name"
      ESInstanceType:
        default: "Elasticsearch Instance Type"
      ESInstanceNumber:
        default: "Number of the Elasticsearch Instances"
      ESDedicatedMasterType:
        default: Dedicated Master Instances type"
      # RDS
      RDSMasterUsername:
        default: "RDS Master User Name"
      # RDSUserPassword:
      #  default: "RDS User Password"
      RDSInstanceType:
        default: "RDS Instance Type"
      RDSInstanceIdentifier:
        default: "RDS Instance Identifier"
      RDSStorageSize:
        default: "RDS Storage Size"

      #SimpleAD
      SimpleADDirectoryName:
        default: "Directory Name for SimpleAD"
      SimpleADDirectoryShortName:
        default: "Directory Short Name for SimpleAD"
      #SimpleADPW:
      #  default: "Simple AD Admin Password"
      
      # MicrosoftAD
      MicrosoftADDirectoryName:
        default: "Directory Name for MicrosoftAD"
      MicrosoftADDirectoryShortName:
        default: "Directory Short Name for MicrosoftAD"
      #MicrosoftADPW:
      #  default: "Microsoft AD Admin Password"

      UiPathPrivateHostedZone:
        default: "Private Hosted Zone for UiPath"
      UiPathELBRecord:
        default: "DNS Name for Elastic Load Balancer"
      CognitoUserPoolName:
        default: "Cognito User Pool Name"
      CognitoIdentityPoolName:
        default: "Cognito Identity Pool Name"
      # AutoScaling
      AutoScalingMin:
        default: "Number of the Minimum Instances"
      AutoScalingMax:
        default: "Number of the Maximum Instances"
      AsgImageId:
        default: "AMI ID"
      DesiredNum:
        default: "Number of the Desired Instances"
      Ec2InstanceType:
        default: "AutoScaling Group Instance Type"
      HealthCheckPeriod:
        default: "health check period"
      
      # NameSpace
      NameSpaceEc2InstanceType:
        default: "Name Space Instance Type"

      # Elasticache
      ECInstanceType:
        default: "ElastiCache Instance Type"

      # FSx for Windows
      FsxStorageSize:
        default: "FSx Storage Size"
      FsxThroughputCapacity:
        default: "FSx Throughput Capacity"
      Fsx01MaintenanceTime:
        default: "FSx01  Maintenance Start Time"
      Fsx01BackupStartTime:
        default: "FSx01 Backup Start Time"
      Fsx02MaintenanceTime:
        default: "FSx02  Maintenance Start Time"
      Fsx02BackupStartTime:
        default: "FSx02 Backup Start Time"
      FsxBackupRetentionDays:
        default: "FSx Backup Retention Days"
      EnvPrefix:
        default: "Environment Prefix"

Parameters:
  # VPC and subnet CIDRs
  VPCCIDR:
    Description: "VPC CIDR (recommend /16)"
    Default: "10.20.0.0/16"
    Type: String
  WorkSpacesSubnet01CIDR:
    Description: "WorkSpaces Subnet01 CIDR. (recommend /24)"
    Default: "10.20.0.0/24"
    Type: String
  WorkSpacesSubnet02CIDR:
    Description: "WorkSpaces Subnet02 CIDR. (recommend /24)"
    Default: "10.20.1.0/24"
    Type: String
  ELBSubnet01CIDR:
    Description: "Network Load Balarncer Subnet01 CIDR. (recommend /24)"
    Default: "10.20.2.0/24"
    Type: String
  ELBSubnet02CIDR:
    Description: "Network Load Balarncer Subnet02 CIDR. (recommend /24)"
    Default: "10.20.3.0/24"
    Type: String
  AutoScalingSubnet01CIDR:
    Description: "AutoScaling Subnet01 CIDR. (recommend /24)"
    Default: "10.20.4.0/24"
    Type: String
  AutoScalingSubnet02CIDR:
    Description: "AutoScaling Subnet02 CIDR. (recommend /24)"
    Default: "10.20.5.0/24"
    Type: String
  DataStoreSubnet01CIDR:
    Description: "Data Store Subnet01 CIDR. (recommend /24)"
    Default: "10.20.6.0/24"
    Type: String
  DataStoreSubnet02CIDR:
    Description: "Data Store Subnet02 CIDR. (recommend /24)"
    Default: "10.20.7.0/24"
    Type: String
  NATGWSubnetCIDR01:
    Description: "NAT Gateway Subnet CIDR. (recommend /24)"
    Default: "10.20.8.0/24"
    Type: String
  NATGWSubnetCIDR02:
    Description: "NAT Gateway Subnet CIDR. (recommend /24)"
    Default: "10.20.9.0/24"
    Type: String
  AmiSubnetCIDR:
    Description: "Ami Instance Subnet CIDR. (recommend /24)"
    Default: "10.20.10.0/24"
    Type: String

# Directory Services
  # Simple AD
  # Passwords must be between 8 and 64 characters, not contain the word "admin", and include three of these four categories: lowercase, uppercase, numeric, and special characters.
  #SimpleADPW:
  #  NoEcho: true
  #  Description: Enter Password for Simple AD Admin. Passwords must be between 8 and 64 characters, not contain the word "admin", and include three of these four categories "lowercase", "uppercase", "numeric", and "special characters".
  #  Default: "U!Path#AD18%@ssw0d"
  #  Type: String
  #  MinLength: 8
  #  MaxLength: 64
#    AllowedPattern: ^[a-zA-Z0-9]*$
  SimpleADDirectoryName:
    Description: FQDN such as "corp.example.com" for WorkSpaces
    Default: "uipath-std-ws.local"
    Type: String
  SimpleADDirectoryShortName:
    Description: "NetBIOS Name"
    Default: "uipathstdws"
    Type: String
    
  # Microsoft AD
  # Passwords must be between 8 and 64 characters, not contain the word "admin", and include three of these four categories: lowercase, uppercase, numeric, and special characters.
  #MicrosoftADPW:
  #  NoEcho: true
  #  Description: Enter Password for Simple AD Admin. Passwords must be between 8 and 64 characters, not contain the word "admin", and include three of these four categories "lowercase", "uppercase", "numeric", and "special characters".
  #  Default: "U!Path#AD18%@ssw0d"
  #  Type: String
  #  MinLength: 8
  #  MaxLength: 64
#    AllowedPattern: ^[a-zA-Z0-9]*$
  MicrosoftADDirectoryName:
    Description: FQDN such as "corp.example.com" for FSx
    Default: "uipath-std-fsx.local"
    Type: String
  MicrosoftADDirectoryShortName:
    Description: "NetBIOS Name"
    Default: "uipathfsx"
    Type: String

  KeyName: 
    Description: "Name of an existing EC2 KeyPair to enable SSH access to the instances"
    Type: "AWS::EC2::KeyPair::KeyName"
    ConstraintDescription: "must be the name of an existing EC2 KeyPair."

  # Name Space Server  
  NameSpaceServerLatestAmiId:
    Description: "Name Space Server AMI ID. default : ami-0ec1c4cb9ca8558e4, Windows_Server-2016-Japanese-Full-Base-2019.06.12"
    Type : String
    #Type : AWS::SSM::Parameter::Value<String>
    #Default: /aws/service/ami-windows-latest/Windows_Server-2016-Japanese-Full-Base
    # Windows_Server-2016-Japanese-Full-Base-2019.06.12
    Default: ami-0ec1c4cb9ca8558e4
    #AllowedValues:
    #- /aws/service/ami-windows-latest/Windows_Server-2012-R2_RTM-Japanese-64Bit-Base
    #- /aws/service/ami-windows-latest/Windows_Server-2016-Japanese-Full-Base
    #- /aws/service/ami-windows-latest/Windows_Server-2019-Japanese-Full-Base
  NameSpaceEc2InstanceType:
    Description: "Instance Type of the Name Space Instances"
    Default: m4.large
    #Default: m5.large
    Type: String

  # Elasticsearch
  ESDomainName:
    Description: "The name must start with a lowercase letter and must be between 3 and 28 characters. Valid characters are a-z (lowercase only), 0-9, and - (hyphen)."
    Type: String
    MinLength: 3
    MaxLength: 28
    AllowedPattern: "^[a-z0-9+-]*$"
    Default: "uipath-std"
  ESInstanceType:
    Description: "Default : m4.large.elasticsearch, Minimum : t2.small.elasticsearch"
    Default: "m4.large.elasticsearch"
    Type: String
  ESInstanceNumber:
    Description: "Zone Awareness enabled. Max:4, Min:2"
    Default: "2"
    Type: String
  ESDedicatedMasterType:
      Description: "Dedicated Master Instance Type. Minimum Recommended : m3.medium.elasticsearch"
      Default: "m3.medium.elasticsearch"
      Type: String

  # ElastiCache
  ECInstanceType:
    Description: "Default : cache.m4.large, Minimum : cache.m3.medium"
    Default: "cache.m4.large"
    Type: String

  # RDS MS SQL
  RDSInstanceIdentifier:
    Description: "RDS Instance Identifier"
    Default: "uipath-std-db"
    Type: String    

  RDSMasterUsername:
    Description: "RDS Master User Name"
    Type: String
    MinLength: 8
    MaxLength: 128
    AllowedPattern: "^[a-zA-Z0-9]*$"
    Default: "uipathdbuser"

  #RDSUserPassword:
  #  NoEcho: true
  #  Description: "RDS Master User Password"
  #  Type: String
  #  MinLength: 8
  #  MaxLength: 128
# #   AllowedPattern: "^[a-z0-9+-]*$"
  #  Default: "Ui6Path#db%as3w0rd"

  RDSInstanceType:
    Description: "Default : db.m5.xlarge, Minimum : db.m5.large"
    Default: "db.m5.xlarge"
    Type: String
  RDSStorageSize:
      Description: "Storage Size of RDS SQL Server"
      Default: 300
      Type: String  

  CognitoUserPoolName:
    Description: "Cognito User Pool Name for Kibana"
    Default: "UipathStandardUserPool"
    Type: String
  CognitoIdentityPoolName:
    Description: "Cognito Identity Pool Name for Kibana"
    Default: "UipathStandardIdentityPool"
    Type: String
  
  # AutoScaling Parameters
  AutoScalingMin:
    Description: "Number of the AutoScaling Minimum Instances"
    Default: 0
    Type: String
  AutoScalingMax:
    Description: "Number of the AutoScaling Maximum Instances"
    Default: 0
    Type: String
  DesiredNum:
    Description: "Number of the AutoScaling Desired Instances"
    Default: 0
    Type: String
  Ec2InstanceType:
    Description: "Instance Type of the AutoScaing Instances"
    Default: m4.large
    #Default: m5.large
    Type: String
  HealthCheckPeriod:
    Description: "Number of the Seconds before ELB starts EC2 health check"
    Default: 300
    Type: String
  # AMI ID for AutoScaling
  AsgImageId: 
    Description: "AMI ID for AutoScaling Group Servers. ami-xxxxxxxxxxx"
    Type: "AWS::EC2::Image::Id"
    ConstraintDescription: "must be the id of an existing AMI."
    Default: ""

  # Route53 Parameters
  UiPathPrivateHostedZone:
    Description: "Route53 Private Hosted Zone for UiPath"
    Default: uipath-std.local
    Type: String

  UiPathELBRecord:
    Description: "DNS Name for Network Load Balancer"
    Default: app
    Type: String

  # FSx Parameters
  FsxStorageSize:
    Description: "FSx Storage Size. Minmum:300GB. Cannnot modify after construction."
    Default: 300
    Type: String

  FsxThroughputCapacity:
    Description: "FSx Throughput Capacity. Mimum:8GB. Cannnot modify after construction."
    Default: 8
    Type: String
    AllowedValues:
      - 8
      - 16
      - 32
      - 64
      - 128
      - 256
      - 512
      - 1024
      - 2048

  Fsx01MaintenanceTime:
    Description: "FSx01 Weekly Maintenance Time (UTC)"
    #日曜は7、UTC 17:00
    Default: "7:17:00"
    Type: String

  Fsx01BackupStartTime:
    Description: "FSx01 Automatic Backup Window Start Time (UTC)"
    Default: "16:00"
    Type: String

  Fsx02MaintenanceTime:
    Description: "FSx02 Weekly Maintenance Time (UTC)"
    #日曜は7、UTC 19:00
    Default: "7:19:00"
    Type: String

  Fsx02BackupStartTime:
    Description: "FSx02 Automatic Backup Window Start Time (UTC)"
    Default: "18:00"
    Type: String

  FsxBackupRetentionDays:
    Description: "FSx Bacup Retention Days"
    Default: 7
    Type: String

  # Other Parameters
  EnvPrefix:
    Description: "Environment Prefix"
    Default: "uipathorch-std"
    Type: String

##########################################
# Resources
Resources:
## VPC
  MyVPC:
    Type: AWS::EC2::VPC
    Properties:
#      CidrBlock: 10.20.0.0/16
      CidrBlock: !Ref VPCCIDR
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      InstanceTenancy: default
      Tags:
      - Key: Name
        Value: !Sub ${EnvPrefix}-vpc
## InternetGateway
  MyIGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
      - Key: Name
        Value: !Sub ${EnvPrefix}-igw
  AttachIGW:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref MyVPC
      InternetGatewayId: !Ref MyIGW
## VPN Gateway
  MyVPNGW:
    Type: AWS::EC2::VPNGateway
    Properties: 
  #    AmazonSideAsn: Long
      Type: ipsec.1
      Tags:
      - 
        Key: Name
        Value: UiPath-Std-VGW
  AttachVGW:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties: 
      VpcId: !Ref MyVPC
      VpnGatewayId: !Ref MyVPNGW

## EIP for NatGateway
  EIPforNatGw1a:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc
  EIPforNatGw1c:
    Type: "AWS::EC2::EIP"
    Properties:
      Domain: vpc

  MyNAT1a:
    DependsOn: AttachIGW
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
        - EIPforNatGw1a
        - AllocationId
      SubnetId:
        Ref: NATGWSubnet01
      Tags:
        - Key: Name
          Value: !Sub ${EnvPrefix}-1a
  MyNAT1c:
    DependsOn: AttachIGW
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId:
        Fn::GetAtt:
        - EIPforNatGw1c
        - AllocationId
      SubnetId:
        Ref: NATGWSubnet02
      Tags:
        - Key: Name
          Value: !Sub ${EnvPrefix}-1c

## ELB(ALB)
#  MyELB:
#    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
#    Properties:
#  #    LoadBalancerAttributes:
#  #      - LoadBalancerAttributes
#      Name: uipath-permanent
#      Scheme: internal
#      SecurityGroups:
#        - Ref: ALBSecurityGroup
#  #    SubnetMappings:
#  #      - SubnetMapping
#      Subnets:
#        - Ref: ELBSubnet01
#        - Ref: ELBSubnet02
#      Tags:
#        - Key: Name
#          Value: uipath-permanent-alb
#      Type: application

## ELB(NLB)
  MyELB:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      LoadBalancerAttributes:
        - Key: load_balancing.cross_zone.enabled
          Value: true
      Name: !Sub ${EnvPrefix}-nlb
      Scheme: internal
      Subnets:
        - Ref: ELBSubnet01
        - Ref: ELBSubnet02
      Tags:
        - Key: Name
          Value: !Sub ${EnvPrefix}-nlb
      Type: network
      # IpAddressType: ipv4 or dualstack (default:ipv4)
      IpAddressType: ipv4

## ELB Target Group(ALB)
#  MyELBTargetGroup:
#    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
#    Properties:
#      HealthCheckIntervalSeconds: 60
#      HealthCheckPath: /api/status
#      HealthCheckPort: traffic-port
#      HealthCheckProtocol: HTTP
#      HealthCheckTimeoutSeconds: 30
#      HealthyThresholdCount: 3
#      Matcher:
#        HttpCode: 200
#      Name: uipath-permanet-target-group
#      Port: 80
#      Protocol: HTTP
#      Tags:
#        - Key: Name
#          Value: UiPathAlbTargetGroup
#  #    TargetGroupAttributes:
#  #      - TargetGroupAttributes
#  #    Targets:
#  #      - TargetDescription
#      TargetType: instance
#      UnhealthyThresholdCount: 3
#      VpcId: 
#        Ref: MyVPC

## ELB Target Group(NLB)
  MyELBTargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /api/status
      HealthCheckPort: traffic-port
      HealthCheckProtocol: HTTPS
      HealthCheckTimeoutSeconds: 10
      HealthyThresholdCount: 3
      Matcher:
        HttpCode: 200-399
      Name: !Sub ${EnvPrefix}-target-group
      Port: 443
      Protocol: TCP
      Tags:
        - Key: Name
          Value: !Sub ${EnvPrefix}-target-group
          #Value: UiPathNlbTargetGroup
      TargetType: instance
      UnhealthyThresholdCount: 3
      VpcId: 
        Ref: MyVPC

## ELB Listner(ALB)
#  ELBListenerHTTP:
#    Type: "AWS::ElasticLoadBalancingV2::Listener"
#    Properties: 
#      DefaultActions:
#        - Type: forward
#          TargetGroupArn: !Ref 'MyELBTargetGroup'
#      LoadBalancerArn: !Ref MyELB
#      Port: 80
#      Protocol: HTTP

## ELB Listner(NLB)
  ELBListenerHTTP:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties: 
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref 'MyELBTargetGroup'
      LoadBalancerArn: !Ref MyELB
      Port: 443
      Protocol: TCP

## Subnets
  WorkSpacesSubnet01:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MyVPC
#      CidrBlock: 10.20.0.0/24
      CidrBlock: !Ref WorkSpacesSubnet01CIDR
      MapPublicIpOnLaunch: false
      AvailabilityZone: ap-northeast-1a
      Tags:
      - Key: Name
        Value: !Sub ${EnvPrefix}-WorkSpaces-1a
  WorkSpacesSubnet02:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MyVPC
#      CidrBlock: 10.20.1.0/24
      CidrBlock: !Ref WorkSpacesSubnet02CIDR
      MapPublicIpOnLaunch: false
      AvailabilityZone: ap-northeast-1c
      Tags:
      - Key: Name
        Value: !Sub ${EnvPrefix}-WorkSpaces-1c
  ELBSubnet01:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MyVPC
#      CidrBlock: 10.20.2.0/24
      CidrBlock: !Ref ELBSubnet01CIDR
      MapPublicIpOnLaunch: false
      AvailabilityZone: ap-northeast-1a
      Tags:
      - Key: Name
        Value: !Sub ${EnvPrefix}-ELB-1a
  ELBSubnet02:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MyVPC
#      CidrBlock: 10.20.3.0/24
      CidrBlock: !Ref ELBSubnet02CIDR
      MapPublicIpOnLaunch: false
      AvailabilityZone: ap-northeast-1c
      Tags:
      - Key: Name
        Value: !Sub ${EnvPrefix}-ELB-1c
  AutoScalingSubnet01:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MyVPC
#      CidrBlock: 10.20.4.0/24
      CidrBlock: !Ref AutoScalingSubnet01CIDR
      MapPublicIpOnLaunch: false
      AvailabilityZone: ap-northeast-1a
      Tags:
      - Key: Name
        Value: !Sub ${EnvPrefix}-AutoScaling-1a
  AutoScalingSubnet02:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MyVPC
#      CidrBlock: 10.20.5.0/24
      CidrBlock: !Ref AutoScalingSubnet02CIDR
      MapPublicIpOnLaunch: false
      AvailabilityZone: ap-northeast-1c
      Tags:
      - Key: Name
        Value: !Sub ${EnvPrefix}-AutoScaling-1c
  DataStoreSubnet01:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MyVPC
#      CidrBlock: 10.20.6.0/24
      CidrBlock: !Ref DataStoreSubnet01CIDR
      MapPublicIpOnLaunch: false
      AvailabilityZone: ap-northeast-1a
      Tags:
      - Key: Name
        Value: !Sub ${EnvPrefix}-DataStore-1a
  DataStoreSubnet02:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MyVPC
#      CidrBlock: 10.20.7.0/24
      CidrBlock: !Ref DataStoreSubnet02CIDR
      MapPublicIpOnLaunch: false
      AvailabilityZone: ap-northeast-1c
      Tags:
      - Key: Name
        Value: !Sub ${EnvPrefix}-DataStore-1c
  NATGWSubnet01:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MyVPC
#      CidrBlock: 10.20.8.0/24
      CidrBlock: !Ref NATGWSubnetCIDR01
      MapPublicIpOnLaunch: true
      AvailabilityZone: ap-northeast-1a
      Tags:
      - Key: Name
        Value: !Sub ${EnvPrefix}-NATGateway-1a
  NATGWSubnet02:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MyVPC
#      CidrBlock: 10.20.9.0/24
      CidrBlock: !Ref NATGWSubnetCIDR02
      MapPublicIpOnLaunch: true
      AvailabilityZone: ap-northeast-1c
      Tags:
      - Key: Name
        Value: !Sub ${EnvPrefix}-NATGateway-1c
  AmiSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId:
        Ref: MyVPC
#      CidrBlock: 10.20.10.0/24
      CidrBlock: !Ref AmiSubnetCIDR
      MapPublicIpOnLaunch: false
      AvailabilityZone: ap-northeast-1a
      Tags:
      - Key: Name
        Value: !Sub ${EnvPrefix}-AMI-Managment-1a

## RouteTable
  MyRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVPC
      Tags:
      - Key: Name
        Value: !Sub ${EnvPrefix}-Internal-RT
  AmiRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVPC
      Tags:
      - Key: Name
        Value: !Sub ${EnvPrefix}-Ami-RT
  NATGWRouteTable01:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVPC
      Tags:
      - Key: Name
        Value: !Sub ${EnvPrefix}-NATGW01-RT
  NATGWRouteTable02:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVPC
      Tags:
      - Key: Name
        Value: !Sub ${EnvPrefix}-NATGW02-RT
  WorkSpacesAutoScalingTable01:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVPC
      Tags:
      - Key: Name
        Value: !Sub ${EnvPrefix}-WorkSpacesAutoScaling01-RT
  WorkSpacesAutoScalingTable02:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId:
        Ref: MyVPC
      Tags:
      - Key: Name
        Value: !Sub ${EnvPrefix}-WorkSpacesAutoScaling02-RT

## Attache RouteTable
  SubnetAttacheRTb01:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: WorkSpacesAutoScalingTable01
      SubnetId:
        Ref: WorkSpacesSubnet01
  SubnetAttacheRTb02:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: WorkSpacesAutoScalingTable02
      SubnetId:
        Ref: WorkSpacesSubnet02
  SubnetAttacheRTb03:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyRouteTable
      SubnetId:
        Ref: ELBSubnet01
  SubnetAttacheRTb04:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyRouteTable
      SubnetId:
        Ref: ELBSubnet02
  SubnetAttacheRTb05:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: WorkSpacesAutoScalingTable01
      SubnetId:
        Ref: AutoScalingSubnet01
  SubnetAttacheRTb06:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: WorkSpacesAutoScalingTable02
      SubnetId:
        Ref: AutoScalingSubnet02
  SubnetAttacheRTb07:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyRouteTable
      SubnetId:
        Ref: DataStoreSubnet01
  SubnetAttacheRTb08:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: MyRouteTable
      SubnetId:
        Ref: DataStoreSubnet02
  SubnetAttacheRTb09:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: AmiRouteTable
      SubnetId:
        Ref: AmiSubnet
  SubnetAttacheRTb10:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: NATGWRouteTable01
      SubnetId:
        Ref: NATGWSubnet01
  SubnetAttacheRTb11:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId:
        Ref: NATGWRouteTable02
      SubnetId:
        Ref: NATGWSubnet02

## Route
  MyRoute01:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: AmiRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: MyNAT1a

  MyRoute02:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: NATGWRouteTable01
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: MyIGW
  
  MyRoute03:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: NATGWRouteTable02
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId:
        Ref: MyIGW
        
  # route For Workspaces
  MyRoute04:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: WorkSpacesAutoScalingTable01
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: MyNAT1a

  MyRoute05:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId:
        Ref: WorkSpacesAutoScalingTable02
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId:
        Ref: MyNAT1c

# Security Group
  # For ALB
#  ALBSecurityGroup:
#    Type: AWS::EC2::SecurityGroup
#    Properties:
#      GroupDescription: uipath-permanent-elb-sg
#      VpcId:
#        Ref: MyVPC
#      Tags:
#      - Key: Name
#        Value: uipath-permanent-elb-sg
#      SecurityGroupIngress:
#      # HTTP/HTTPS Access for workspaces subnet
#      - 
#        IpProtocol: tcp
#        FromPort: '80'
#        ToPort: '80'
#        CidrIp: !Ref WorkSpacesSubnet01CIDR
#      - 
#        IpProtocol: tcp
#        FromPort: '80'
#        ToPort: '80'
#        CidrIp: !Ref WorkSpacesSubnet02CIDR
#      - 
#        IpProtocol: tcp
#        FromPort: '443'
#        ToPort: '443'
#        CidrIp: !Ref WorkSpacesSubnet01CIDR
#      - 
#        IpProtocol: tcp
#        FromPort: '443'
#        ToPort: '443'
#        CidrIp: !Ref WorkSpacesSubnet02CIDR

  AutoScalingSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub ${EnvPrefix}-autoscaling-sg
      VpcId:
        Ref: MyVPC
      Tags:
      - Key: Name
        Value: !Sub ${EnvPrefix}-autoscaling-sg
      SecurityGroupIngress:
      # HTTPS Access From ELB(ALB)
#      - 
#        IpProtocol: tcp
#        FromPort: '80'
#        ToPort: '80'
#        SourceSecurityGroupId:
#          Ref: ALBSecurityGroup
##        CidrIp: 10.20.0.0/23
##        CidrIp: !GetAtt MyVPC.CidrBlock
      # HTTPS Access From ELB(NLB)
      - 
        IpProtocol: tcp
        FromPort: '443'
        ToPort: '443'
#        CidrIp: 10.20.0.0/23
        CidrIp: !GetAtt MyVPC.CidrBlock
      -  
        IpProtocol: tcp
        FromPort: '3389'
        ToPort: '3389'
        CidrIp: !Ref WorkSpacesSubnet01CIDR
      -
        IpProtocol: tcp
        FromPort: '3389'
        ToPort: '3389'
        CidrIp: !Ref WorkSpacesSubnet02CIDR

  # For Amazon Elasticsearch Service
  ElasticsearchSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub ${EnvPrefix}-elasticsearch-sg
      VpcId:
        Ref: MyVPC
      Tags:
      - Key: Name
        Value: !Sub ${EnvPrefix}-elasticsearch-sg
      SecurityGroupIngress:
      # From AutoScaling Group
      - 
        IpProtocol: tcp
        FromPort: '443'
        ToPort: '443'
        SourceSecurityGroupId:
          Ref: AutoScalingSecurityGroup
      # From WorkSpaces
      - 
        IpProtocol: tcp
        FromPort: '443'
        ToPort: '443'
        CidrIp: !Ref WorkSpacesSubnet01CIDR
      - 
        IpProtocol: tcp
        FromPort: '443'
        ToPort: '443'
        CidrIp: !Ref WorkSpacesSubnet02CIDR

  # For ElastiCache
  ElastiCacheSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub ${EnvPrefix}-elasticache-sg
      VpcId:
        Ref: MyVPC
      Tags:
      - Key: Name
        Value: !Sub ${EnvPrefix}-elasticache-sg
      SecurityGroupIngress: 
      # From EC2 for Redis
      - 
        IpProtocol: tcp
        FromPort: '6379'
        ToPort: '6379'
        SourceSecurityGroupId:
          Ref: AutoScalingSecurityGroup
      # From AMI Managemnt Subnet
      - 
        IpProtocol: tcp
        FromPort: '6379'
        ToPort: '6379'
        SourceSecurityGroupId:
          Ref: AMISecurityGroup

  # For RDS MSSQL Server
  RDSSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub ${EnvPrefix}-mssql-sg
      VpcId:
        Ref: MyVPC
      Tags:
      - Key: Name
        Value: !Sub ${EnvPrefix}-mssql-sg
      SecurityGroupIngress:
      # From AutoScailing EC2
      - 
        IpProtocol: tcp
        FromPort: '1433'
        ToPort: '1433'
        SourceSecurityGroupId:
          Ref: AutoScalingSecurityGroup
      # From AMI Subnet
      - 
        IpProtocol: tcp
        FromPort: '1433'
        ToPort: '1433'
        SourceSecurityGroupId:
          Ref: AMISecurityGroup

  # For AMI Managed Instance
  AMISecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub ${EnvPrefix}-ami-managed-sg
      VpcId:
        Ref: MyVPC
      Tags:
      - Key: Name
        Value: !Sub ${EnvPrefix}-ami-managed-sg
      SecurityGroupIngress:
      # RDP From WorkSpaces
      - 
        IpProtocol: tcp
        FromPort: '3389'
        ToPort: '3389'
        CidrIp: !Ref WorkSpacesSubnet01CIDR
      - 
        IpProtocol: tcp
        FromPort: '3389'
        ToPort: '3389'
        CidrIp: !Ref WorkSpacesSubnet02CIDR

  # For File Server
  # File ServerはFSxに変更になったので削除
#  FileServerSecurityGroup:
#    Type: AWS::EC2::SecurityGroup
#    Properties:
#      GroupDescription: !Sub ${EnvPrefix}-file-server-sg
#      VpcId:
#        Ref: MyVPC
#      Tags:
#      - Key: Name
#        Value: !Sub ${EnvPrefix}-file-server-sg
#      SecurityGroupIngress:
#      # RDP From WorkSpaces
#      - 
#        IpProtocol: tcp
#        FromPort: '445'
#        ToPort: '445'
#        SourceSecurityGroupId:
#          Ref: AutoScalingSecurityGroup

  # FSx for Windows Security Group
  # TCP/UDP 445 (SMB), TCP 135 (RPC), TCP/UDP 1024-65535 (Ephemeral ports for RPC)
  FSxSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub ${EnvPrefix}-fsx-access-sg
      VpcId:
        Ref: MyVPC
      Tags:
      - Key: Name
        Value: !Sub ${EnvPrefix}-fsx-access-sg
      SecurityGroupIngress:
      ## from AutoScalingSubnet
      # SMB 445
      - 
        IpProtocol: tcp
        FromPort: '445'
        ToPort: '445'
        CidrIp: !Ref AutoScalingSubnet01CIDR
        #SourceSecurityGroupId:
        #  Ref: AutoScalingSecurityGroup
        #SourceSecurityGroupName:  (<- 非VPCセキュリティグループのみ)
        #  !GetAtt
        #    - AutoScalingSecurityGroup
        #    - GroupId
      - 
        IpProtocol: tcp
        FromPort: '445'
        ToPort: '445'
        CidrIp: !Ref AutoScalingSubnet02CIDR
        #SourceSecurityGroupId:
        #  Ref: AutoScalingSecurityGroup
        #SourceSecurityGroupName:  (<- 非VPCセキュリティグループのみ)
        #  !GetAtt
        #    - AutoScalingSecurityGroup
        #    - GroupId
      - 
        IpProtocol: udp
        FromPort: '445'
        ToPort: '445'
        CidrIp: !Ref AutoScalingSubnet01CIDR
        #SourceSecurityGroupId:
        #  Ref: AutoScalingSecurityGroup
      # RPC - 135
      - 
        IpProtocol: udp
        FromPort: '445'
        ToPort: '445'
        CidrIp: !Ref AutoScalingSubnet02CIDR
        #SourceSecurityGroupId:
        #  Ref: AutoScalingSecurityGroup
      # RPC - 135
      - 
        IpProtocol: tcp
        FromPort: '135'
        ToPort: '135'
        CidrIp: !Ref AutoScalingSubnet01CIDR
        #SourceSecurityGroupId:
        #  Ref: AutoScalingSecurityGroup
      # Temporary RPC - 1024-65535
      - 
        IpProtocol: tcp
        FromPort: '135'
        ToPort: '135'
        CidrIp: !Ref AutoScalingSubnet02CIDR
        #SourceSecurityGroupId:
        #  Ref: AutoScalingSecurityGroup
      # Temporary RPC - 1024-65535
      - 
        IpProtocol: tcp
        FromPort: '1024'
        ToPort: '65535'
        CidrIp: !Ref AutoScalingSubnet01CIDR
        #SourceSecurityGroupId:
        #  Ref: AutoScalingSecurityGroup
      - 
        IpProtocol: tcp
        FromPort: '1024'
        ToPort: '65535'
        CidrIp: !Ref AutoScalingSubnet02CIDR
        #SourceSecurityGroupId:
        #  Ref: AutoScalingSecurityGroup
      - 
        IpProtocol: udp
        FromPort: '1024'
        ToPort: '65535'
        CidrIp: !Ref AutoScalingSubnet01CIDR
        #SourceSecurityGroupId:
        #  Ref: AutoScalingSecurityGroup
      - 
        IpProtocol: udp
        FromPort: '1024'
        ToPort: '65535'
        CidrIp: !Ref AutoScalingSubnet02CIDR
        #SourceSecurityGroupId:
        #  Ref: AutoScalingSecurityGroup

      ## from DataStoreSubnet
      - 
        IpProtocol: tcp
        FromPort: '445'
        ToPort: '445'
        CidrIp: !Ref DataStoreSubnet01CIDR
      - 
        IpProtocol: tcp
        FromPort: '445'
        ToPort: '445'
        CidrIp: !Ref DataStoreSubnet02CIDR
      - 
        IpProtocol: udp
        FromPort: '445'
        ToPort: '445'
        CidrIp: !Ref DataStoreSubnet01CIDR
        #SourceSecurityGroupId:
        #  Ref: AutoScalingSecurityGroup
      # RPC - 135
      - 
        IpProtocol: udp
        FromPort: '445'
        ToPort: '445'
        CidrIp: !Ref DataStoreSubnet02CIDR
        #SourceSecurityGroupId:
        #  Ref: AutoScalingSecurityGroup
      # RPC - 135
      - 
        IpProtocol: tcp
        FromPort: '135'
        ToPort: '135'
        CidrIp: !Ref DataStoreSubnet01CIDR
        #SourceSecurityGroupId:
        #  Ref: AutoScalingSecurityGroup
      - 
        IpProtocol: tcp
        FromPort: '135'
        ToPort: '135'
        CidrIp: !Ref DataStoreSubnet02CIDR
      # Temporary RPC - 1024-65535
      - 
        IpProtocol: tcp
        FromPort: '1024'
        ToPort: '65535'
        CidrIp: !Ref DataStoreSubnet01CIDR
      - 
        IpProtocol: tcp
        FromPort: '1024'
        ToPort: '65535'
        CidrIp: !Ref DataStoreSubnet02CIDR
      - 
        IpProtocol: udp
        FromPort: '1024'
        ToPort: '65535'
        CidrIp: !Ref DataStoreSubnet01CIDR
      - 
        IpProtocol: udp
        FromPort: '1024'
        ToPort: '65535'
        CidrIp: !Ref DataStoreSubnet02CIDR    
        
#      ## Security Group Ingress for FSx from dfs temp server
#      # SMB 445
#      - 
#        IpProtocol: tcp
#        FromPort: '445'
#        ToPort: '445'
#        SourceSecurityGroupId:
#          Ref: DfsrTempSecurityGroup
#        #SourceSecurityGroupName:  (<- 非VPCセキュリティグループのみ)
#        #  !GetAtt
#        #    - AutoScalingSecurityGroup
#        #    - GroupId
#      - 
#        IpProtocol: udp
#        FromPort: '445'
#        ToPort: '445'
#        SourceSecurityGroupId:
#          Ref: DfsrTempSecurityGroup
#      # RPC - 135
#      - 
#        IpProtocol: tcp
#        FromPort: '135'
#        ToPort: '135'
#        SourceSecurityGroupId:
#          Ref: DfsrTempSecurityGroup
#      # Temporary RPC - 1024-65535
#      - 
#        IpProtocol: tcp
#        FromPort: '1024'
#        ToPort: '65535'
#        SourceSecurityGroupId:
#          Ref: DfsrTempSecurityGroup
#      - 
#        IpProtocol: udp
#        FromPort: '1024'
#        ToPort: '65535'
#        SourceSecurityGroupId:
#          Ref: DfsrTempSecurityGroup
##      # DFS-R Access
##      - 
##        IpProtocol: tcp
##        FromPort: '55555'
##        ToPort: '55555'
##        CidrIp: 10.20.6.0/24
##      - 
##        IpProtocol: tcp
##        FromPort: '55555'
##        ToPort: '55555'
##        CidrIp: 10.20.7.0/24

  # Security Group for Name Space Servers
  NameSpaceServerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub ${EnvPrefix}-ns-server-sg
      VpcId:
        Ref: MyVPC
      Tags:
      - Key: Name
        Value: !Sub ${EnvPrefix}-ns-server-sg
      SecurityGroupIngress:
      ## from AutoScalingSubnet
      # SMB 445
      - 
        IpProtocol: tcp
        FromPort: '445'
        ToPort: '445'
        CidrIp: !Ref AutoScalingSubnet01CIDR
      - 
        IpProtocol: tcp
        FromPort: '445'
        ToPort: '445'
        CidrIp: !Ref AutoScalingSubnet02CIDR
      - 
        IpProtocol: udp
        FromPort: '445'
        ToPort: '445'
        CidrIp: !Ref AutoScalingSubnet01CIDR
        #SourceSecurityGroupId:
        #  Ref: AutoScalingSecurityGroup
      # RPC - 135
      - 
        IpProtocol: udp
        FromPort: '445'
        ToPort: '445'
        CidrIp: !Ref AutoScalingSubnet02CIDR
        #SourceSecurityGroupId:
        #  Ref: AutoScalingSecurityGroup
      # RPC - 135
      - 
        IpProtocol: tcp
        FromPort: '135'
        ToPort: '135'
        CidrIp: !Ref AutoScalingSubnet01CIDR
        #SourceSecurityGroupId:
        #  Ref: AutoScalingSecurityGroup
      # Temporary RPC - 1024-65535
      - 
        IpProtocol: tcp
        FromPort: '135'
        ToPort: '135'
        CidrIp: !Ref AutoScalingSubnet02CIDR
        #SourceSecurityGroupId:
        #  Ref: AutoScalingSecurityGroup
      # Temporary RPC - 1024-65535
      - 
        IpProtocol: tcp
        FromPort: '1024'
        ToPort: '65535'
        CidrIp: !Ref AutoScalingSubnet01CIDR
        #SourceSecurityGroupId:
        #  Ref: AutoScalingSecurityGroup
      - 
        IpProtocol: tcp
        FromPort: '1024'
        ToPort: '65535'
        CidrIp: !Ref AutoScalingSubnet02CIDR
        #SourceSecurityGroupId:
        #  Ref: AutoScalingSecurityGroup
      - 
        IpProtocol: udp
        FromPort: '1024'
        ToPort: '65535'
        CidrIp: !Ref AutoScalingSubnet01CIDR
        #SourceSecurityGroupId:
        #  Ref: AutoScalingSecurityGroup
      - 
        IpProtocol: udp
        FromPort: '1024'
        ToPort: '65535'
        CidrIp: !Ref AutoScalingSubnet02CIDR
        #SourceSecurityGroupId:
        #  Ref: AutoScalingSecurityGroup
      -  
        IpProtocol: tcp
        FromPort: '3389'
        ToPort: '3389'
        CidrIp: !Ref WorkSpacesSubnet01CIDR
      -
        IpProtocol: tcp
        FromPort: '3389'
        ToPort: '3389'
        CidrIp: !Ref WorkSpacesSubnet02CIDR

## Simple AD
  MySimpleAd:
    Type: AWS::DirectoryService::SimpleAD
    Properties:
      Name: !Ref SimpleADDirectoryName
      Password: '{{resolve:ssm-secure:UipathSimpleadPasswd:1}}'
      #Password: !Ref SimpleADPW
      ShortName: !Ref SimpleADDirectoryShortName
      Size: Small
      VpcSettings:
        SubnetIds:
          - Ref: WorkSpacesSubnet01
          - Ref: WorkSpacesSubnet02
        VpcId: !Ref MyVPC

## Create IAM Role for AutoScaling
  AsgEc2Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      # S3アクセスはお客様要望。CloudWatchは将来的な監視用途のため。SSMはParameter Store参照用。
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/AmazonS3FullAccess
      - arn:aws:iam::aws:policy/CloudWatchFullAccess
      - arn:aws:iam::aws:policy/AmazonSSMReadOnlyAccess


## Create IAM Profile for AutoScaling
  AsgEc2InstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: "/"
      Roles:
        - !Ref AsgEc2Role

## AutoScaling
  MyAutoScalingGroup:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      AutoScalingGroupName: !Sub ${EnvPrefix}-web-server-group
  #    Cooldown: 300
      DesiredCapacity: !Ref DesiredNum
      HealthCheckGracePeriod: !Ref HealthCheckPeriod
      HealthCheckType: ELB
      LaunchConfigurationName:
        Ref: LaunchConfig
      MaxSize: !Ref AutoScalingMax
      MinSize: !Ref AutoScalingMin
      Tags:
        - Key: Name
          Value: !Sub ${EnvPrefix}-asg
          PropagateAtLaunch: true
      TargetGroupARNs:
        - !Ref MyELBTargetGroup
      VPCZoneIdentifier: 
        - Ref: AutoScalingSubnet01
        - Ref: AutoScalingSubnet02

## LaunchConfig
  LaunchConfig:
    Type: "AWS::AutoScaling::LaunchConfiguration"
    Properties:
      ###### 後でfalseに修正すること
      AssociatePublicIpAddress: false
      #AssociatePublicIpAddress: true
      IamInstanceProfile: !Ref AsgEc2InstanceProfile
      ImageId: !Ref AsgImageId
#      InstanceMonitoring: true # Default: true
      InstanceType: !Ref Ec2InstanceType
      KeyName: !Ref KeyName
      SecurityGroups:
        - Ref: AutoScalingSecurityGroup
      UserData:
        Fn::Base64: !Sub |
          <powershell>
          $password999 = Get-SSMParameter -Name UipathFsxMsadPasswd -WithDecryption $True | Select-Object -ExpandProperty Value
          $password = ConvertTo-SecureString -AsPlainText -Force $password999
          $credential = New-Object System.Management.Automation.PSCredential("admin", $password)
          Add-Computer -DomainName uipath-std-fsx.local -OUPath "OU=uipathfsx,DC=uipath-std-fsx,DC=local" -Credential $credential -restart       
          </powershell>
          
# Route53 Private Hosted Zone
  MyZone:
    Type: "AWS::Route53::HostedZone"
    Properties: 
      HostedZoneConfig:
          Comment: "Private Hosted Zone for UiPath Standard Environment. for !Sub ${EnvPrefix}"
      Name: !Ref UiPathPrivateHostedZone
      VPCs:
        - 
          VPCId: !Ref MyVPC
          VPCRegion: !Sub ${AWS::Region}

# Route53 Record
  # Default Records : xxx.uipath-perm-private.local
  MyDNSRecord:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId: !Ref MyZone
      RecordSets:
      # ELB CNAME (Default : app.uipath-perm-private.local)
      - Name: !Sub app.${UiPathPrivateHostedZone}.
        Type: A
        AliasTarget:
          HostedZoneId: !GetAtt MyELB.CanonicalHostedZoneID
          DNSName: !GetAtt MyELB.DNSName
      # RDS CNAME
      - Name: !Sub rds.${UiPathPrivateHostedZone}.
        Type: CNAME
        TTL: 300
        ResourceRecords:
        - !GetAtt RdsMsSql.Endpoint.Address
        #- rds.dummy.local
        
      # Elasticache CNAME
      - Name: !Sub redis.${UiPathPrivateHostedZone}.
        Type: CNAME
        TTL: 300
        ResourceRecords:
        - !GetAtt MyElastiCache.PrimaryEndPoint.Address
        #- ec.dummy.local

      # Elasticsearch CNAME
      - Name: !Sub elasticsearch.${UiPathPrivateHostedZone}.
        Type: CNAME
        TTL: 300
        ResourceRecords:
        - !GetAtt MyElasticsearch.DomainEndpoint
        #- ec.dummy.local

# Elasticsearch on VPC
  MyElasticsearch:
    Type: AWS::Elasticsearch::Domain
    Properties: 
      AccessPolicies:
        Version: 2012-10-17
        Statement: 
          - Effect: Allow
            Principal:
              AWS: '*'
            Action: 'es:*'
            Resource: !Sub arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/${ESDomainName}/*
      DomainName: !Ref ESDomainName
      EBSOptions:
        EBSEnabled: true
        VolumeSize: 100
        VolumeType: gp2
      ElasticsearchClusterConfig:
        # If you enable zone awareness, you must have an even number of instances in the instance count.
        # InstanceCount: 4
        InstanceCount: !Ref ESInstanceNumber
        InstanceType: !Ref ESInstanceType
        ZoneAwarenessEnabled: true
        DedicatedMasterEnabled: true
        DedicatedMasterType: !Ref ESDedicatedMasterType
        DedicatedMasterCount: 3
      ElasticsearchVersion: 6.3
      SnapshotOptions:
        AutomatedSnapshotStartHour: 17
      VPCOptions: 
        SubnetIds:
          - !Ref DataStoreSubnet01
          - !Ref DataStoreSubnet02
        SecurityGroupIds:
          - !Ref ElasticsearchSecurityGroup

# ElastiCache Redis Parameter Group
  MyElastiCacheRedisParameterGroup:
    Type: "AWS::ElastiCache::ParameterGroup"
    Properties: 
      CacheParameterGroupFamily: "redis4.0"
      Description: "uipath orchestrator environment parameter group"
#      Properties:
#        String: String

# ElastiCache Redis Subnet Group
  MyElastiCascheRedisSubnetGroup:
    Type: "AWS::ElastiCache::SubnetGroup"
    Properties:
      CacheSubnetGroupName: !Sub ${EnvPrefix}-subnet-group
      Description: "uipath orchestrator Environment Subnet Group"
      SubnetIds:
        - !Ref DataStoreSubnet01
        - !Ref DataStoreSubnet02

# ElastiCache Redis on VPC
  MyElastiCache:
    Type: "AWS::ElastiCache::ReplicationGroup"
    Properties: 
      AtRestEncryptionEnabled: false
      AutomaticFailoverEnabled: true
      CacheNodeType: !Ref ECInstanceType
      CacheParameterGroupName: !Ref MyElastiCacheRedisParameterGroup
      CacheSubnetGroupName: !Ref MyElastiCascheRedisSubnetGroup
      Engine: Redis
      EngineVersion: 4.0.10
      NodeGroupConfiguration:
        - PrimaryAvailabilityZone: ap-northeast-1a
          ReplicaAvailabilityZones:
            - ap-northeast-1a
            - ap-northeast-1c
          ReplicaCount: 2
#          Slots: String
#      NotificationTopicArn: String
      Port: 6379
      # Either PreferredCacheClusterAZs or PrimaryAvailabilityZone and ReplicaAvailabilityZones must be specified. 
      # 「PrimaryAvailabilityZone と ReplicaAvailabilityZones」を指定してる場合は使えない
#      PreferredCacheClusterAZs:
#        - ap-northeast-1a
#        - ap-northeast-1c
      PreferredMaintenanceWindow: sun:17:00-sun:18:00
      ReplicationGroupDescription: "Redis Cluster for UiPath (No Cluster mode)"
      ReplicationGroupId: !Sub ${EnvPrefix}
      #ReplicationGroupId: uipath-perm-cluster
      SecurityGroupIds:
        - !Ref ElastiCacheSecurityGroup
      # AutoBackup
      SnapshotRetentionLimit: 7
      SnapshotWindow: 16:00-17:00
#      Tags
#        - Resource Tag
#      TransitEncryptionEnabled: Boolean

## RDS MSSQL
# IAM Role for RDS
## Create IAM Role
  RDSMonitoringRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - monitoring.rds.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole

# RDS Subnet Group
  RdsSubnetGroup:
    Type: "AWS::RDS::DBSubnetGroup"
    Properties: 
      DBSubnetGroupDescription: "uipath orchestrator rds subnet group"
      DBSubnetGroupName: !Sub ${EnvPrefix}-subnet
      SubnetIds:
        - !Ref DataStoreSubnet01
        - !Ref DataStoreSubnet02

# RDS Option Group
  RdsOptionGroup:
    Type: "AWS::RDS::OptionGroup"
    Properties: 
      EngineName: sqlserver-se
      MajorEngineVersion: "14.00"
      OptionGroupDescription: "uipath orchestrator Option Group. Engin is SQL Server Standard Edtion."
#      OptionConfigurations:
#        - OptionConfiguration

# RDS Parameter group
  RdsParameterGroup:
    Type: "AWS::RDS::DBParameterGroup"
    Properties: 
      Description: "!Sub ${EnvPrefix}-parameter"
      Family: "sqlserver-se-14.0"
#      Parameters:
#        DBParameters

# RDS MS SQL Server
  RdsMsSql:
    Type: AWS::RDS::DBInstance
    DeletionPolicy: Delete
    Properties:
      #AllocatedStorage: 300
      AllocatedStorage: !Ref RDSStorageSize
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: false
      BackupRetentionPeriod: 7
      DBInstanceClass: !Ref RDSInstanceType
      DBInstanceIdentifier: !Ref RDSInstanceIdentifier
      DBParameterGroupName: !Ref RdsParameterGroup
      DBSubnetGroupName: !Ref RdsSubnetGroup
      # 要確認
      Engine: sqlserver-se
      EngineVersion: "14.00.3015.40.v1"
      LicenseModel: license-included
      MasterUsername: !Ref RDSMasterUsername
      MasterUserPassword: '{{resolve:ssm-secure:RdsMasterPasswd:1}}'
      #MasterUserPassword: !Ref RDSUserPassword
      MonitoringInterval: 60
      MonitoringRoleArn: !GetAtt RDSMonitoringRole.Arn
      MultiAZ: true
      OptionGroupName: !Ref RdsOptionGroup
      PreferredBackupWindow: 17:00-17:30
      PreferredMaintenanceWindow: Sun:18:00-Sun:18:30
      PubliclyAccessible: false
      StorageType: gp2
#      Tags:
#        Resource Tag
      Timezone: "Tokyo Standard Time"
      VPCSecurityGroups:
        - !Ref RDSSecurityGroup

### Congnito ################################
## Cognito User Pool
  MyUserPool:
    Type: "AWS::Cognito::UserPool"
    Properties:
      UserPoolName: !Ref CognitoUserPoolName

## Cognito Identity Pool
  MyIdentityPool:
    Type: "AWS::Cognito::IdentityPool"
    Properties:
      IdentityPoolName: !Ref CognitoIdentityPoolName
      AllowUnauthenticatedIdentities: true

# Unauth policy      
  UnauthenticatedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Action:
          - mobileanalytics:PutEvents
          - cognito-sync:*
          Resource:
          - "*"
  UnauthenticatedRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Action: "sts:AssumeRoleWithWebIdentity"
          Principal:
            Federated: cognito-identity.amazonaws.com
          Condition:
            StringEquals:
              "cognito-identity.amazonaws.com:aud":
                Ref: MyIdentityPool
            ForAnyValue:StringLike:
              "cognito-identity.amazonaws.com:amr": unauthenticated
      ManagedPolicyArns:
      - Ref: UnauthenticatedPolicy
      
# Auth policy      
  AuthenticatedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Action:
          - mobileanalytics:PutEvents
          - cognito-sync:*
          - cognito-identity:*
          Resource:
          - "*"
  AuthenticatedRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
        - Effect: Allow
          Action: "sts:AssumeRoleWithWebIdentity"
          Principal:
            Federated: cognito-identity.amazonaws.com
          Condition:
            StringEquals:
              "cognito-identity.amazonaws.com:aud":
                Ref: MyIdentityPool
            ForAnyValue:StringLike:
              "cognito-identity.amazonaws.com:amr": authenticated
      ManagedPolicyArns:
      - Ref: AuthenticatedPolicy

# ES auth IAM Role
  ESAuthPolicy:
    Type: "AWS::IAM::Policy"
    Properties: 
      PolicyName: "EsHttpdAccess"
      PolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Action: 
                - "es:ESHttpHead"
                - "es:ESHttpPost"
                - "es:ESHttpGet"
                - "es:ESHttpDelete"
                - "es:ESHttpPut"
            Resource: "*"
      Roles: 
        - 
          Ref: "AuthenticatedRole"

# ES unauth IAM Role
  ESUnAuthPolicy:
    Type: "AWS::IAM::Policy"
    Properties: 
      PolicyName: "EsHttpdAccess"
      PolicyDocument: 
        Version: "2012-10-17"
        Statement: 
          - 
            Effect: "Allow"
            Action: 
                - "es:ESHttpHead"
                - "es:ESHttpPost"
                - "es:ESHttpGet"
                - "es:ESHttpDelete"
                - "es:ESHttpPut"
            Resource: "*"
      Roles: 
        - 
          Ref: "UnauthenticatedRole"

  MyIdentityPoolRoleAttachment:
    Type: "AWS::Cognito::IdentityPoolRoleAttachment"
    Properties:
      IdentityPoolId: !Ref MyIdentityPool
#      RoleMappings: 
#        String to RoleMapping object map
      Roles: 
        unauthenticated:
          Fn::GetAtt:
          - UnauthenticatedRole
          - Arn
        authenticated:
          Fn::GetAtt:
          - AuthenticatedRole
          - Arn
################################

# FSx for Windows 
  FSxWindows01:
    Type: AWS::FSx::FileSystem
    Properties: 
      #BackupId: String
      FileSystemType: WINDOWS
      #KmsKeyId: String
      #LustreConfiguration: 
        #LustreConfiguration
      SecurityGroupIds:
        - !Ref FSxSecurityGroup
      StorageCapacity: !Ref FsxStorageSize
      SubnetIds:
        - !Ref DataStoreSubnet01
      #Tags: 
      #  - Tag
      WindowsConfiguration: 
        ActiveDirectoryId: !Ref MicrosoftDirectory
        ThroughputCapacity: !Ref FsxThroughputCapacity
        WeeklyMaintenanceStartTime: !Ref Fsx01MaintenanceTime
        DailyAutomaticBackupStartTime: !Ref Fsx01BackupStartTime
        AutomaticBackupRetentionDays: !Ref FsxBackupRetentionDays
        CopyTagsToBackups: false

  FSxWindows02:
    Type: AWS::FSx::FileSystem
    Properties: 
      #BackupId: String
      FileSystemType: WINDOWS
      #KmsKeyId: String
      #LustreConfiguration: 
        #LustreConfiguration
      SecurityGroupIds:
        - !Ref FSxSecurityGroup
      StorageCapacity: !Ref FsxStorageSize
      SubnetIds:
        - !Ref DataStoreSubnet02
      #Tags: 
      #  - Tag
      WindowsConfiguration: 
        ActiveDirectoryId: !Ref MicrosoftDirectory
        ThroughputCapacity: !Ref FsxThroughputCapacity
        WeeklyMaintenanceStartTime: !Ref Fsx02MaintenanceTime
        DailyAutomaticBackupStartTime: !Ref Fsx02BackupStartTime
        AutomaticBackupRetentionDays: !Ref FsxBackupRetentionDays
        CopyTagsToBackups: false

## Microsoft AD For FSx Windows
  MicrosoftDirectory:
    Type: "AWS::DirectoryService::MicrosoftAD"
    Properties:
      Edition: Standard
      Name: !Ref MicrosoftADDirectoryName
      Password: '{{resolve:ssm-secure:UipathFsxMsadPasswd:1}}'
      #Password: 
        #Ref: MicrosoftADPW
      ShortName: !Ref MicrosoftADDirectoryShortName
      VpcSettings:
        SubnetIds:
          - Ref: DataStoreSubnet01
          - Ref: DataStoreSubnet02
        VpcId: !Ref MyVPC

  # EC2 for Name Space Server 01
  NameSpaceServer01:
    Type: "AWS::EC2::Instance"
    Properties: 
      AvailabilityZone: ap-northeast-1a
      BlockDeviceMappings:
        - DeviceName: "/dev/sda1"
          Ebs: 
            VolumeType: "gp2"
            DeleteOnTermination: "false"
            VolumeSize: "30"
      IamInstanceProfile: !Ref NameSpaceServerEc2InstanceProfile
      ImageId: !Ref NameSpaceServerLatestAmiId
      InstanceInitiatedShutdownBehavior: stop
      InstanceType: !Ref NameSpaceEc2InstanceType
      KeyName: !Ref KeyName
      SecurityGroupIds:
        - Ref: NameSpaceServerSecurityGroup
      SubnetId:
        Ref: AutoScalingSubnet01
      SsmAssociations:
          - AssociationParameters:
              - Key: directoryId
                Value:
                  - !Ref MicrosoftDirectory
                  #- d-95672d6182
              - Key: directoryName
                Value:
                  - !Ref MicrosoftADDirectoryName
                  #- uipath-fsx.local
              - Key: dnsIpAddresses
                Value:
                  - !Select [ 0, !GetAtt MicrosoftDirectory.DnsIpAddresses ]
                  - !Select [ 1, !GetAtt MicrosoftDirectory.DnsIpAddresses ]
                  #- 10.20.6.72   # 直指定だとデプロイできた。
                  #- 10.20.7.107  # 直指定だとデプロイできた。
            DocumentName: AWS-JoinDirectoryServiceDomain
      # DFS-R, 名前空間サーバの冗長化作成に必要なRSATツール群をインストール
      UserData:
        Fn::Base64: !Sub |
          <powershell>
          Install-WindowsFeature -Name FS-FileServer, FS-DFS-namespace -IncludeManagementTools
          Install-WindowsFeature -Name RSAT-DFS-Mgmt-Con
          Install-WindowsFeature -Name RSAT-DNS-Server
          Install-WindowsFeature GPMC
          New-Item -Type Directory -Path "C:\DFS"
          </powershell>
      Tags: 
        - Key: Name
          Value: !Sub ${EnvPrefix}-name-space-server-01

  # EC2 for Name Space Server 02
  NameSpaceServer02:
    Type: "AWS::EC2::Instance"
    Properties: 
      AvailabilityZone: ap-northeast-1c
      BlockDeviceMappings:
        - DeviceName: "/dev/sda1"
          Ebs: 
            VolumeType: "gp2"
            DeleteOnTermination: "false"
            VolumeSize: "30"
      IamInstanceProfile: !Ref NameSpaceServerEc2InstanceProfile
      ImageId: !Ref NameSpaceServerLatestAmiId
      InstanceInitiatedShutdownBehavior: stop
      InstanceType: !Ref NameSpaceEc2InstanceType
      KeyName: !Ref KeyName
      SecurityGroupIds:
        - Ref: NameSpaceServerSecurityGroup
      SubnetId:
        Ref: AutoScalingSubnet02
      SsmAssociations:
          - AssociationParameters:
              - Key: directoryId
                Value:
                  - !Ref MicrosoftDirectory
                  #- d-95672d6182
              - Key: directoryName
                Value:
                  - !Ref MicrosoftADDirectoryName
                  #- uipath-fsx.local
              - Key: dnsIpAddresses
                Value:
                  - !Select [ 0, !GetAtt MicrosoftDirectory.DnsIpAddresses ]
                  - !Select [ 1, !GetAtt MicrosoftDirectory.DnsIpAddresses ]
                  #- 10.20.6.72   # 直指定だとデプロイできた。
                  #- 10.20.7.107  # 直指定だとデプロイできた。
            DocumentName: AWS-JoinDirectoryServiceDomain
      # DFS-R, 名前空間サーバの冗長化作成に必要なRSATツール群をインストール
      UserData:
        Fn::Base64: !Sub |
          <powershell>
          Install-WindowsFeature -Name FS-FileServer, FS-DFS-namespace -IncludeManagementTools
          Install-WindowsFeature -Name RSAT-DFS-Mgmt-Con
          Install-WindowsFeature -Name RSAT-DNS-Server
          Install-WindowsFeature GPMC
          New-Item -Type Directory -Path "C:\DFS"
          </powershell>
      Tags: 
        - Key: Name
          Value: !Sub ${EnvPrefix}-name-space-server-02

## Create IAM Role for Name Space Server 01/02
  NameSpaceServerEc2Role:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - ec2.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
      - arn:aws:iam::aws:policy/CloudWatchFullAccess
      - arn:aws:iam::aws:policy/service-role/AmazonEC2RoleforSSM

## Create IAM Profile for Name Space Server 01/02
  NameSpaceServerEc2InstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Path: "/"
      Roles:
        - !Ref NameSpaceServerEc2Role

#############################################

## Output
Outputs:
  VPC:
    Description: "VPC ID"
    Value: !Ref MyVPC
  VPCCIDR:
    Description: "VPC CIDR"
    Value: !GetAtt MyVPC.CidrBlock
  SimpleAD:
    Description: "Directory ID"
    Value: !Ref MySimpleAd
  #SimpleADPassword:
  #  Description: "Administrator Password for Simple AD"
  #  Value: !Ref SimpleADPW
  SimpleADDnsIpAddresses:
    Description: "SimpleAD DNS IP addresses"
    Value: !Join [ ",", !GetAtt MySimpleAd.DnsIpAddresses ]
  NATGateway01: 
    Description: "NAT Gateway ID on ap-northeast-1a"
    Value: !Ref MyNAT1a
  NATGateway02: 
    Description: "NAT Gateway ID on ap-northeast-1c"
    Value: !Ref MyNAT1c
  EIPforNAT01:
    Description: "Elastic IP for Nat Gateway on ap-northeast-1a"
    Value: !Ref EIPforNatGw1a
  EIPforNAT02:
    Description: "Elastic IP for Nat Gateway on ap-northeast-1c"
    Value: !Ref EIPforNatGw1c
  EIPID01:
    Description: "Allocation ID for Elastic IP of NatGateway on ap-northeast-1a"
    Value: !GetAtt EIPforNatGw1a.AllocationId
  EIPID02:
    Description: "Allocation ID for Elastic IP of NatGateway on ap-northeast-1c"
    Value: !GetAtt EIPforNatGw1c.AllocationId
  ELBID:
    Description: "ELB DNS Name"
    Value: !GetAtt MyELB.DNSName
######### 一時的にコメントアウト
  ElasticsearchEndPoint:
    Description: "Elasticsearch Endpoint"
    Value: !GetAtt MyElasticsearch.DomainEndpoint
  ElastiCachePrimaryEndPoint:
    Description: "ElastiCache Primary EndPoint"
    Value: !GetAtt MyElastiCache.PrimaryEndPoint.Address
  ElastiCacheReadReplicaEndPoint:
    Description: "ElastiCache Read Replica EndPoint"
#    Value: !GetAtt MyElastiCache.ReadEndPoint.Addresses.List
    Value: !Join [ ",", !GetAtt MyElastiCache.ReadEndPoint.Addresses.List ]
  RDSEndPoint:
    Description: "RDS End Point"
    Value: !GetAtt RdsMsSql.Endpoint.Address
  PrivateHostedZone:
    Description: "Route53 Private Hosted Zone Name For ELB End Point"
    Value: !Ref UiPathPrivateHostedZone
  UiPathELBDnsName:
    Description: "ELB DNS Name for UiPath. This is a route53 AILIAS Record"
    Value: !Sub ${UiPathELBRecord}.${UiPathPrivateHostedZone}.
  CognitoUserPoolName:
    Description: "Cognito User Pool Name for Kibana"
    Value: !Ref CognitoUserPoolName
  CognitoIdentityPoolName:
    Description: "Cognito Identity Pool Name for Kibana"
    Value: !Ref CognitoIdentityPoolName
  ElbOriginalDnsName:
    Description: "Original DNS Name for ELB"
    Value: !Sub app.${UiPathPrivateHostedZone}
  RdsOriginalDnsName:
    Description: "Original DNS Name for RDS"
    Value: !Sub rds.${UiPathPrivateHostedZone}
  RedisOriginalDnsName:
    Description: "Original DNS Name for Redis ElastiCache"
    Value: !Sub redis.${UiPathPrivateHostedZone}
  ElasticsearchOriginalDnsName:
    Description: "Original DNS Name for Elasticsearch"
    Value: !Sub elasticsearch.${UiPathPrivateHostedZone}
  MicrosoftDirectoryDnsIpAddresses:
    Description: "Microsoft Directory DNS IP addresses"
    Value: !Join [ ",", !GetAtt MicrosoftDirectory.DnsIpAddresses ]
  MicrosoftAdDomain:
    Description: "Domain name for FSx, App Server,Name space server"
    Value: !Ref MicrosoftADDirectoryName
  SimpleAdDomain:
    Description: "Domain name for WorkSpaces, DNS forwarder from Onpremis Servers"
    Value: !Ref SimpleADDirectoryName
  FsxDnsName01:
    Description: "DNS Name for FSx Windows 1"
    Value: !Sub ${FSxWindows01}.${MicrosoftADDirectoryName}
  FsxDnsName02:
    Description: "DNS Name for FSx Windows 2"
    Value: !Sub ${FSxWindows02}.${MicrosoftADDirectoryName}
